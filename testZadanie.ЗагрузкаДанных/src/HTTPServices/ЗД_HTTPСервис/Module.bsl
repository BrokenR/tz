
Функция endpointМетод1(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки(ПолучитьДанныеЗаписей(Запрос.ПараметрыЗапроса));
	
	Возврат Ответ;
КонецФункции 

Функция ПолучитьДанныеЗаписей(Параметры) 
	ФлагДата = Ложь;
	ФлагДоктор = Ложь;
	ФлагКлиент = ложь;
	Запрос = Новый ЗАпрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаписиКлиентов.Период КАК Период,
	|	ЗаписиКлиентов.Врач КАК Врач,
	|	ЗаписиКлиентов.Клиент КАК Клиент,
	|	ЗаписиКлиентов.ДатаВремяНачалоПриема КАК ДатаВремяНачалоПриема,
	|	ЗаписиКлиентов.ДатаВремяОкончаниеПриема КАК ДатаВремяОкончаниеПриема
	|ИЗ
	|	РегистрСведений.ЗаписиКлиентов КАК ЗаписиКлиентов";
	
	Если Параметры.Получить("date") <> Неопределено ИЛИ Параметры.Получить("date") <> Неопределено или Параметры.Получить("date") <> Неопределено Тогда
		Запрос.Текст = Запрос.Текст + " 
		|ГДЕ
		|	&УсловиеПериод
		|	&УсловиеВрач
		|	&УсловиеКлиент";
	Иначе  
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() ТОгда
			Возврат "Не найдено ни одной записи";
		КонецЕсли;
		Выгрузка = Результат.Выгрузить();
		Массив = ОбщегоНазначения.ТаблицаЗначенийВМассив(ВЫгрузка);
		Возврат ЗапистьДанныеВДжейсон(Массив);	
		Возврат Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
	Если Параметры.Получить("date") <> Неопределено ТОгда
		ПолученнаяДата = СтроковыеФункцииКлиентСервер.СтрокаВДату(Параметры.Получить("date"));
		Если Не ЗначениеЗаполнено(ПолученнаяДата) Тогда
			Возврат "Некорректно заполнен период";
		КонецЕсли;	                              
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеПериод","НачалоПериода(ЗаписиКлиентов.Период) = &Период");
		Запрос.УстановитьПараметр("Период",ПолученнаяДата);   
		ФлагДата = Истина;  
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеПериод","");
	КонецЕсли;
	Если Параметры.Получить("doctor") <> Неопределено ТОгда
		Если ФлагДата тогда  
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеВрач","И ЗаписиКлиентов.Врач = &Врач");
		Иначе    
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеВрач","ЗаписиКлиентов.Врач = &Врач");
		КонецЕсли;	                                                                       
		Запрос.УстановитьПараметр("Врач",Параметры.Получить("doctor"));	
		ФлагДоктор = Истина;
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеВрач","");
	КонецЕсли;
	Если Параметры.Получить("client") <> Неопределено ТОгда
		Если ФлагДата или ФлагДоктор тогда  
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеКлиент","И ЗаписиКлиентов.Клиент = &Клиент");
		Иначе         
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеКлиент","ЗаписиКлиентов.Клиент = &Клиент");
		КонецЕсли;	
		Запрос.УстановитьПараметр("Клиент",Параметры.Получить("client"));	
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеКлиент","");
	КонецЕсли;
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() ТОгда
		Возврат "Не найдено ни одной записи";
	КонецЕсли;
	Выгрузка = Результат.Выгрузить();
	Массив = ОбщегоНазначения.ТаблицаЗначенийВМассив(ВЫгрузка);
	Возврат ЗапистьДанныеВДжейсон(Массив);	
КонецФУнкции

Функция ЗапистьДанныеВДжейсон(Данные)
	Запись = Новый ЗаписьJSON;
	Запись.УстановитьСтроку();
	ЗаписатьJSON(Запись,Данные);
	Возврат Запись.Закрыть();
	
	
КонецФункции

Функция ПрочитатьДанныеИзДжейсона(жсон)
	Попытка
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(жсон);
	Структура = ПрочитатьJSON(Чтение);
	Чтение.Закрыть();
	Возврат Структура;
Исключение
	ЗаписьЖурналаРегистрации("Пост запрос",УровеньЖурналаРегистрации.Ошибка,,,"Некорректные входящие данные");
	возврат Неопределено;	
КонецПопытки;
КонецФУнкции

Функция endpointМетод2(Запрос)              
	Тело = Запрос.ПолучитьТелоКакСтроку();
	Данные = ПрочитатьДанныеИзДжейсона(Тело);  	
	Ответ = Новый HTTPСервисОтвет(200); 
	Если Данные = Неопределено Тогда
		Ответ.УстановитьТелоИзСтроки("Некорректно заполнено тело запроса");	
	ИначеЕсли Проверка(Данные) Тогда
		Ответ.УстановитьТелоИзСтроки("Некорректно заполнено тело запроса");	
	ИначеЕсли ТипЗнч(Данные) = Тип("Массив") Тогда
		Возвращаемое = СоздатьПачкуДокументов(Данные);
		Ответ.УстановитьТелоИЗСтроки(ЗапистьДанныеВДжейсон(Возвращаемое));		
	Иначе
		Возвращаемое = СоздатьДокумент(Данные); 
		Ответ.УстановитьТелоИЗСтроки(ЗапистьДанныеВДжейсон(Возвращаемое));
	КонецЕсли;
	Возврат Ответ;
КонецФункции

Функция Проверка(Данные) 
	Если ТипЗнч(Данные) <> Тип("Массив") Тогда
		
		Если Не Данные.Свойство("date") ИЛИ Не Данные.Свойство("doctor") ИЛИ Не Данные.Свойство("client") ИЛИ Не Данные.Свойство("startTime") ИЛИ Не Данные.Свойство("endTime")  Тогда
			возврат Истина;	
		КонецЕсли; 
		Если Не ЗначениеЗаполнено(Данные.date) ИЛИ Не ЗначениеЗаполнено(Данные.doctor) ИЛИ Не ЗначениеЗаполнено(Данные.client) ИЛИ Не ЗначениеЗаполнено(Данные.startTime) ИЛИ Не ЗначениеЗаполнено(Данные.endTime) Тогда
			возврат Истина;
		КонецЕсли;
	Иначе
		Для Каждого Стр из Данные Цикл
			Если Не Стр.Свойство("date") ИЛИ Не Стр.Свойство("doctor") ИЛИ Не Стр.Свойство("client") ИЛИ Не Стр.Свойство("startTime") ИЛИ Не Стр.Свойство("endTime")  Тогда
				возврат Истина;	
			КонецЕсли; 
			Если Не ЗначениеЗаполнено(Стр.date) ИЛИ Не ЗначениеЗаполнено(Стр.doctor) ИЛИ Не ЗначениеЗаполнено(Стр.client) ИЛИ Не ЗначениеЗаполнено(Стр.startTime) ИЛИ Не ЗначениеЗаполнено(Стр.endTime) Тогда
				возврат Истина;
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;
	возврат Ложь;
КонецФУнкции	

Функция СоздатьПачкуДокументов(данные)
		Массив = Новый Массив;
	Для Каждого Стр из данные ЦИкл
		Массив.Добавить(СоздатьДокумент(Стр));
	КонецЦикла;	
	Возврат Массив;
КонецФУнкции

ФУнкция СоздатьДокумент(Данные)
	Док = Документы.ЗаписьКлиента.СоздатьДокумент();
	Док.Дата = ПрочитатьДатуJSON(Данные.date,ФорматДатыJSON.ISO);
	Док.Врач = Данные.doctor;
	Док.ДатаВремяНачалоПриема = ПрочитатьДатуJSON(Данные.startTime,ФорматДатыJSON.ISO);
	Док.ДатаВремяОкончаниеПриема = ПрочитатьДатуJSON(Данные.endTime,ФорматДатыJSON.ISO);
	Док.Клиент = Данные.client;    
	Попытка
		Док.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		Возврат "Документ с такими данными уже есть";	
	КОнецПопытки;	
	Возврат Строка(Док.ссылка.УникальныйИдентификатор());
КонецФУнкции

